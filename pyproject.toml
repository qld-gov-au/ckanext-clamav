[build-system]
requires = ["setuptools",]
build-backend = "setuptools.build_meta"

[project]
name = "ckanext-clamav"
version = "1.0.32"
requires-python = ">=3.8"
description = "Check uploaded resources for viruses for CKAN"
classifiers = ["Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10", ]
keywords = [ "CKAN", "extension", "validation", "clamav"]
dependencies = []
authors = [
    {name = "DataShades", email = "datashades@linkdigital.com.au"},
    {name = "Oleksandr Cherniavskyi", email = "mutantsan@gmail.com"},
    {name = "William Dutton (duttonw)", email = "william.dutton@qld.gov.au"},
#    {name = "", email = ""},
]
maintainers = [
    {name = "DataShades", email = "datashades@linkdigital.com.au"},
]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.license]
text = "AGPL"

[project.urls]
Homepage = "https://github.com/DataShades/ckanext-clamav"

[project.entry-points."ckan.plugins"]
clamav="ckanext.clamav.plugin:ClamavPlugin"

[project.entry-points."babel.extractors"]
ckan = "ckan.lib.extract:extract_ckan"

[tool.setuptools.packages]
find = {}

[tool.pytest.ini_options]
addopts = "--ckan-ini test.ini"
filterwarnings = [
    "ignore::DeprecationWarning",
]


[tool.pyright]
pythonVersion = "3.9"
include = ["ckanext"]
extraPaths = ["ckan"]

exclude = [
    "**/test*",
    "**/migration",
]
strict = []

strictParameterNoneValue = true # type must be Optional if default value is None

# Check the meaning of rules here
# https://github.com/microsoft/pyright/blob/main/docs/configuration.md
reportFunctionMemberAccess = true # non-standard member accesses for functions
reportMissingImports = true
reportMissingModuleSource = true
reportMissingTypeStubs = false
reportImportCycles = false
reportUnusedImport = true
reportUnusedClass = true
reportUnusedFunction = true
reportUnusedVariable = true
reportDuplicateImport = true
reportOptionalSubscript = true
reportOptionalMemberAccess = true
reportOptionalCall = true
reportOptionalIterable = true
reportOptionalContextManager = true
reportOptionalOperand = true
# We are using Context in a way that conflicts with this check
reportTypedDictNotRequiredAccess = false
reportConstantRedefinition = true
reportIncompatibleMethodOverride = false
reportIncompatibleVariableOverride = false
reportOverlappingOverload = true
reportUntypedFunctionDecorator = false
reportUnknownParameterType = true
reportUnknownArgumentType = false
reportUnknownLambdaType = false
reportUnknownMemberType = false
reportMissingTypeArgument = true
reportInvalidTypeVarUse = true
reportCallInDefaultInitializer = true
reportUnknownVariableType = false
reportUntypedBaseClass = true
reportUnnecessaryIsInstance = true
reportUnnecessaryCast = true
reportUnnecessaryComparison = true
reportAssertAlwaysTrue = true
reportSelfClsParameterName = true
reportUnusedCallResult = false # allow function calls for side-effect only (like logic.check_acces)
useLibraryCodeForTypes = true
reportGeneralTypeIssues = true
reportPropertyTypeMismatch = true
reportWildcardImportFromLibrary = true
reportUntypedClassDecorator = false # authenticator relies on repoze.who class-decorator
reportUntypedNamedTuple = true
reportPrivateUsage = false # TODO: do not access private members in CKAN's codebase
reportPrivateImportUsage = true
reportInconsistentConstructor = true
reportMissingSuperCall = false
reportUninitializedInstanceVariable = false
reportInvalidStringEscapeSequence = true
reportMissingParameterType = true
reportImplicitStringConcatenation = false
reportUndefinedVariable = true
reportUnboundVariable = true
reportInvalidStubStatement = true
reportIncompleteStub = true
reportUnsupportedDunderAll = true
reportUnusedCoroutine = true
reportUnnecessaryTypeIgnoreComment = true
reportMatchNotExhaustive = true